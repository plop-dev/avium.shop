/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    orders: Order;
    presets: Preset;
    products: Product;
    media: Media;
    quotes: Quote;
    filaments: Filament;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    presets: PresetsSelect<false> | PresetsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    quotes: QuotesSelect<false> | QuotesSelect<true>;
    filaments: FilamentsSelect<false> | FilamentsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'printing-options': PrintingOption;
    'pricing-formula': PricingFormula;
  };
  globalsSelect: {
    'printing-options': PrintingOptionsSelect<false> | PrintingOptionsSelect<true>;
    'pricing-formula': PricingFormulaSelect<false> | PricingFormulaSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  emailVerified?: string | null;
  name: string;
  image?: string | null;
  email: string;
  role?: ('customer' | 'employee' | 'admin' | 'developer') | null;
  address?:
    | {
        line1: string;
        line2?: string | null;
        city: string;
        postalCode: string;
        country: string;
        id?: string | null;
      }[]
    | null;
  orders?: (string | Order)[] | null;
  subscription?: {
    plan?: ('none' | 'plus') | null;
    status?: ('Active' | 'PastDue' | 'Unpaid' | 'Paused') | null;
    stripeSubscriptionId?: string | null;
    currentPeriodStart?: string | null;
    currentPeriodEnd?: string | null;
  };
  stripeCustomerId?: string | null;
  accounts?:
    | {
        provider: string;
        providerAccountId: string;
        type: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * The name of the order
   */
  name: string;
  /**
   * The user who placed the order
   */
  customer: string | User;
  prints: (
    | {
        product: string | Product;
        quantity: number;
        price: number;
        id?: string | null;
        blockName?: string | null;
        blockType: 'shopProduct';
      }
    | {
        /**
         * The 3D model associated with this item
         */
        model: {
          filename: string;
          filetype: 'stl' | '3mf';
          /**
           * The unique download URL to the model
           */
          modelUrl: string;
          /**
           * The unique download URL to the G-code file
           */
          gcodeUrl: string;
        };
        printingOptions: {
          preset?: (string | null) | Preset;
          layerHeight?: number | null;
          infill?: number | null;
          plastic: string;
          colour: string;
        };
        /**
         * Estimated print time as returned by the slicer
         */
        time?: string | null;
        /**
         * Estimated filament usage in grams as returned by the slicer
         */
        filament?: number | null;
        quantity: number;
        price: number;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customPrint';
      }
  )[];
  payment: {
    /**
     * Stripe Payment Intent ID
     */
    stripePaymentIntentId?: string | null;
    status?: ('pending' | 'processing' | 'succeeded' | 'failed' | 'cancelled') | null;
    /**
     * Payment amount in cents
     */
    amount?: number | null;
  };
  /**
   * The total price of the order. Calculated from the prints.
   */
  total: number;
  /**
   * The print queue this order is assigned to
   */
  queue?: number | null;
  status: {
    statuses?:
      | {
          stage: 'in-queue' | 'printing' | 'packaging' | 'shipped' | 'cancelled';
          timestamp: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Current order status - auto-synced from status history
     */
    currentStatus: 'in-queue' | 'printing' | 'packaging' | 'shipped' | 'cancelled';
  };
  /**
   * Comments on this order
   */
  comments?:
    | {
        /**
         * The user who made the comment
         */
        author: string | User;
        /**
         * The content of the comment
         */
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Products available for purchase in the shop. DO NOT DELETE PRODUCTS, HIDE INSTEAD.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  /**
   * The name of the product
   */
  name: string;
  /**
   * A detailed description of the product
   */
  description: string;
  pictures: (string | Media)[];
  /**
   * The price of the product in GBP (Â£)
   */
  price: number;
  /**
   * The estimated print time for the product
   */
  time: string;
  /**
   * The number of times this product has been bought
   */
  orders?: number | null;
  printingOptions: {
    plastic: {
      /**
       * The name of the plastic type
       */
      name: string;
      /**
       * A brief description of the plastic type
       */
      description?: string | null;
      colours?:
        | {
            colour: string;
            id?: string | null;
          }[]
        | null;
      id?: string | null;
      blockName?: string | null;
      blockType: 'plastic';
    }[];
    /**
     * The layer height of the product. This is set by the preset and cannot be changed by the user.
     */
    layerHeight: number;
    /**
     * The infill percentage of the product. This is set by the preset and cannot be changed by the user.
     */
    infill: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Alt text for images / caption for videos
   */
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "presets".
 */
export interface Preset {
  id: string;
  /**
   * The name of the preset
   */
  name: string;
  /**
   * A brief description of the preset
   */
  description?: string | null;
  /**
   * The filename of the profile of the preset (process) in Bambu Studio/Orca Slicer. DO NOT INCLUDE FILE EXTENSION. See C:\Program Files\OrcaSlicer\resources\profiles\BBL\process
   */
  bambulabName?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quotes".
 */
export interface Quote {
  id: string;
  /**
   * The 3D model associated with this item
   */
  model: {
    filename: string;
    filetype: 'stl' | '3mf';
    /**
     * The unique download URL to the model
     */
    modelUrl?: string | null;
    /**
     * The unique download URL to the G-code file
     */
    gcodeUrl?: string | null;
  };
  printingOptions: {
    preset?: (string | null) | Preset;
    layerHeight?: number | null;
    infill?: number | null;
    /**
     * The plastic/material ID
     */
    plastic: string;
    /**
     * The colour ID
     */
    colour: string;
  };
  /**
   * The user who requested the quote
   */
  user: string | User;
  /**
   * Estimated filament usage in grams as returned by the slicer
   */
  filament?: number | null;
  /**
   * Estimated print time as returned by the slicer (total)
   */
  time?: string | null;
  price?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filaments".
 */
export interface Filament {
  id: string;
  /**
   * The name of the filament/material. USE THIS FORMAT: PLA, PETG, ABS, etc.
   */
  name: string;
  /**
   * JSON data from filament folder in Bambu Labs or Orca Slicer. Path: C:/Program Files/OrcaSlicer/resources/profiles/BBL
   */
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'products';
    value: string | Product;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'presets';
        value: string | Preset;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'quotes';
        value: string | Quote;
      } | null)
    | ({
        relationTo: 'filaments';
        value: string | Filament;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  id?: T;
  emailVerified?: T;
  name?: T;
  image?: T;
  email?: T;
  role?: T;
  address?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        postalCode?: T;
        country?: T;
        id?: T;
      };
  orders?: T;
  subscription?:
    | T
    | {
        plan?: T;
        status?: T;
        stripeSubscriptionId?: T;
        currentPeriodStart?: T;
        currentPeriodEnd?: T;
      };
  stripeCustomerId?: T;
  accounts?:
    | T
    | {
        provider?: T;
        providerAccountId?: T;
        type?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  name?: T;
  customer?: T;
  prints?:
    | T
    | {
        shopProduct?:
          | T
          | {
              product?: T;
              quantity?: T;
              price?: T;
              id?: T;
              blockName?: T;
            };
        customPrint?:
          | T
          | {
              model?:
                | T
                | {
                    filename?: T;
                    filetype?: T;
                    modelUrl?: T;
                    gcodeUrl?: T;
                  };
              printingOptions?:
                | T
                | {
                    preset?: T;
                    layerHeight?: T;
                    infill?: T;
                    plastic?: T;
                    colour?: T;
                  };
              time?: T;
              filament?: T;
              quantity?: T;
              price?: T;
              id?: T;
              blockName?: T;
            };
      };
  payment?:
    | T
    | {
        stripePaymentIntentId?: T;
        status?: T;
        amount?: T;
      };
  total?: T;
  queue?: T;
  status?:
    | T
    | {
        statuses?:
          | T
          | {
              stage?: T;
              timestamp?: T;
              id?: T;
            };
        currentStatus?: T;
      };
  comments?:
    | T
    | {
        author?: T;
        content?: T;
        createdAt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "presets_select".
 */
export interface PresetsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  bambulabName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  pictures?: T;
  price?: T;
  time?: T;
  orders?: T;
  printingOptions?:
    | T
    | {
        plastic?:
          | T
          | {
              plastic?:
                | T
                | {
                    name?: T;
                    description?: T;
                    colours?:
                      | T
                      | {
                          colour?: T;
                          id?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
            };
        layerHeight?: T;
        infill?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quotes_select".
 */
export interface QuotesSelect<T extends boolean = true> {
  model?:
    | T
    | {
        filename?: T;
        filetype?: T;
        modelUrl?: T;
        gcodeUrl?: T;
      };
  printingOptions?:
    | T
    | {
        preset?: T;
        layerHeight?: T;
        infill?: T;
        plastic?: T;
        colour?: T;
      };
  user?: T;
  filament?: T;
  time?: T;
  price?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filaments_select".
 */
export interface FilamentsSelect<T extends boolean = true> {
  name?: T;
  data?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "printing-options".
 */
export interface PrintingOption {
  id: string;
  plastic?:
    | {
        /**
         * The name of the plastic type
         */
        name: string;
        /**
         * A brief description of the plastic type
         */
        description?: string | null;
        colours?:
          | {
              colour: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'plastic';
      }[]
    | null;
  layerHeight: {
    min: number;
    max: number;
  };
  infill: {
    min: number;
    max: number;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing-formula".
 */
export interface PricingFormula {
  id: string;
  pricingFormula: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "printing-options_select".
 */
export interface PrintingOptionsSelect<T extends boolean = true> {
  plastic?:
    | T
    | {
        plastic?:
          | T
          | {
              name?: T;
              description?: T;
              colours?:
                | T
                | {
                    colour?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  layerHeight?:
    | T
    | {
        min?: T;
        max?: T;
      };
  infill?:
    | T
    | {
        min?: T;
        max?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing-formula_select".
 */
export interface PricingFormulaSelect<T extends boolean = true> {
  pricingFormula?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}