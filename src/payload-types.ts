/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    orders: Order;
    presets: Preset;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    presets: PresetsSelect<false> | PresetsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'printing-options': PrintingOption;
  };
  globalsSelect: {
    'printing-options': PrintingOptionsSelect<false> | PrintingOptionsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  emailVerified?: string | null;
  name: string;
  image?: string | null;
  email: string;
  role?: ('customer' | 'employee' | 'admin' | 'developer') | null;
  address?:
    | {
        line1: string;
        line2?: string | null;
        city: string;
        postalCode: string;
        country: string;
        id?: string | null;
      }[]
    | null;
  orders?: (string | Order)[] | null;
  subscription?: {
    plan?: ('none' | 'plus') | null;
    status?: ('Active' | 'PastDue' | 'Unpaid' | 'Paused') | null;
    stripeSubscriptionId?: string | null;
    currentPeriodStart?: string | null;
    currentPeriodEnd?: string | null;
  };
  stripeCustomerId?: string | null;
  accounts?:
    | {
        id?: string | null;
        provider: string;
        providerAccountId: string;
        type: string;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * The name of the order
   */
  name: string;
  /**
   * The user who placed the order
   */
  customer: string | User;
  /**
   * The 3D model(s) associated with this order
   */
  model?:
    | {
        /**
         * The name of the 3D model file (example: acb123)
         */
        filename: string;
        filetype: 'stl' | 'obj' | '3mf';
        /**
         * The relative path of the 3D model file on the server (example: /files/abc123.stl)
         */
        serverPath: string;
        id?: string | null;
      }[]
    | null;
  quantity: number;
  printingOptions: {
    preset?: (string | null) | Preset;
    layerHeight?: number | null;
    infill: {
      min: number;
      max: number;
    };
  };
  payment: {};
  quote?: {};
  statuses?:
    | {
        stage: 'received' | 'processing' | 'printing' | 'quality_check' | 'shipped' | 'delivered' | 'cancelled';
        timestamp: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Denormalized field for quick access
   */
  currentStatus?:
    | ('received' | 'processing' | 'printing' | 'quality_check' | 'shipped' | 'delivered' | 'cancelled')
    | null;
  comments?:
    | {
        /**
         * The user who made the comment
         */
        author: string | User;
        /**
         * The content of the comment
         */
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "presets".
 */
export interface Preset {
  id: string;
  /**
   * The name of the preset
   */
  name: string;
  /**
   * A brief description of the preset
   */
  description?: string | null;
  /**
   * The name of the preset in Bambu Lab
   */
  bambulabName?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'presets';
        value: string | Preset;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  id?: T;
  emailVerified?: T;
  name?: T;
  image?: T;
  email?: T;
  role?: T;
  address?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        postalCode?: T;
        country?: T;
        id?: T;
      };
  orders?: T;
  subscription?:
    | T
    | {
        plan?: T;
        status?: T;
        stripeSubscriptionId?: T;
        currentPeriodStart?: T;
        currentPeriodEnd?: T;
      };
  stripeCustomerId?: T;
  accounts?:
    | T
    | {
        id?: T;
        provider?: T;
        providerAccountId?: T;
        type?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  name?: T;
  customer?: T;
  model?:
    | T
    | {
        filename?: T;
        filetype?: T;
        serverPath?: T;
        id?: T;
      };
  quantity?: T;
  printingOptions?:
    | T
    | {
        preset?: T;
        layerHeight?: T;
        infill?:
          | T
          | {
              min?: T;
              max?: T;
            };
      };
  payment?: T | {};
  quote?: T | {};
  statuses?:
    | T
    | {
        stage?: T;
        timestamp?: T;
        id?: T;
      };
  currentStatus?: T;
  comments?:
    | T
    | {
        author?: T;
        content?: T;
        createdAt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "presets_select".
 */
export interface PresetsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  bambulabName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "printing-options".
 */
export interface PrintingOption {
  id: string;
  plastic?:
    | {
        /**
         * The name of the plastic type
         */
        name: string;
        /**
         * A brief description of the plastic type
         */
        description?: string | null;
        colours?:
          | {
              color: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'plastic';
      }[]
    | null;
  layerHeight: {
    min: number;
    max: number;
  };
  infill: {
    min: number;
    max: number;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "printing-options_select".
 */
export interface PrintingOptionsSelect<T extends boolean = true> {
  plastic?:
    | T
    | {
        plastic?:
          | T
          | {
              name?: T;
              description?: T;
              colours?:
                | T
                | {
                    color?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  layerHeight?:
    | T
    | {
        min?: T;
        max?: T;
      };
  infill?:
    | T
    | {
        min?: T;
        max?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}